name: Go
on:
  push:
    tags:
      - 'v*'
    
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.15
      uses: actions/setup-go@v2
      with:
        go-version: 1.15
      id: go
    - name: Set up Node 14
      uses: actions/setup-node@v1
      with:
        node-version: 14
      id: node

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Get backend dependencies
      run: |
        sudo rm -f /etc/apt/sources.list.d/dotnetdev.list /etc/apt/sources.list.d/microsoft-prod.list
        sudo apt-get update
        xargs sudo apt-get install < Aptfile
        go mod download

    - name: Build
      run: |
        go build -v -ldflags "-w -s -X github.com/TrungNguyen1909/MusicStream.BuildVersion=`git describe --tags` -X github.com/TrungNguyen1909/MusicStream.BuildTime=`date +%FT%T%z`" -o MusicStream cmd/MusicStream/main.go
    - name: Build frontend
      run: |
        cd frontend
        yarn && yarn --prod --frozen-lockfile build

    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - name: Packaging
      id: packaging
      env:
        RUNNER_OS: ${{ runner.os }}
        VERSION: ${{ steps.get_version.outputs.VERSION }}
      run: |
        BACKEND_DIST=MusicStream-$RUNNER_OS-$VERSION
        FRONTEND_DIST=MusicStream-$RUNNER_OS-$VERSION-www
        echo ::set-output name=BACKEND_DIST::$BACKEND_DIST
        echo ::set-output name=FRONTEND_DIST::$FRONTEND_DIST
        mkdir $BACKEND_DIST
        mkdir $FRONTEND_DIST
        cp MusicStream $BACKEND_DIST
        cp LICENSE $BACKEND_DIST
        cp -R frontend/dist $FRONTEND_DIST
        cp frontend/LICENSE $FRONTEND_DIST
    - name: Upload artifact (backend)
      uses: actions/upload-artifact@v1.0.0
      with:
        name: ${{ steps.packaging.outputs.BACKEND_DIST }}
        path: ${{ steps.packaging.outputs.BACKEND_DIST }}
    - name: Upload artifact (frontend)
      uses: actions/upload-artifact@v1.0.0
      with:
        name: ${{ steps.packaging.outputs.FRONTEND_DIST }}
        path: ${{ steps.packaging.outputs.FRONTEND_DIST }}
